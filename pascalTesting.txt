program RandomExample;

var
  a, b, c: integer;

begin
  a := 5;
  b := 10;
  c := a + b;

  if c > 10 then
    writeln('The sum is greater than 10')
  else
    writeln('The sum is 10 or less');
end.

--------------------------------------------------------

program ConstStrExample;

{ya no falla el const}
const
    Greeting = 'Hello, Mini-Pascal!';

begin
    writeln(Greeting);
end.

-------------------------------------------------------

{ This is a comment }
program HelloWorld;

{el : despues de msg falla, creo que eso si deberia de fallar}
const
    msg: string = 'Hello, world!';
begin
    write(msg);
end.

-----------------------------------------------------------

program ConstStrExample;

{el Greeting falla, porque lleva un const conststr y ese no esta definido}
const
    conststr Greeting = 'Hello, Mini-Pascal!';

begin
    writeln(Greeting);
end.

-------------------------------------------------------

{ This is a comment }
program HelloWorld;
var
    msg: string;
begin
    msg := 'Hello, world!';
    write(msg);
end.

--------------------------------------------------------

program FactorialExample;

var
  n: integer;

function Factorial(x: integer): integer;
begin
  if x <= 1 then
    Factorial := 1
  else
    Factorial := x * Factorial(x - 1);
end;

begin
  n := 5;  { You can change this value to calculate the factorial of a different number }
  writeln('Factorial of ', n, ' is: ', Factorial(n));
  { falla el parentesis del param del Factorial }
end.

---------------------------------------------------------

program ForToExample;

var
  i: integer;

begin
  for i := 1 to 5 do
  begin
    writeln('Value of i: ', i);
  end;
end.

-------------------------------------------------------

program ForDowntoExample;

var
  i: integer;

begin
  for i := 5 downto 1 do
  begin
    writeln('Value of i: ', i);
  end;
end.


------------------------------------------------------

program SumArrayFunctionExample;

{ Declaración de la función }
function SumArray(arr: array of Integer): Integer; {ya no falla con el array "of" integer}
var
  i, sum: Integer;
begin
  sum := 0;

  { Sumar todos los elementos del array }
  for i := 0 to High(arr) do
    sum := sum + arr[i];

  SumArray := sum;
end;

var
  numbers: array[1..5] of Integer = (10, 20, 30, 40, 50); {ya no falla en la asignacion de los valores del array}
  letters: array[1..5] of char = ('a', 'b', 'c', 'c', 'd');
  boolArray: array[1..3] of boolean = (true, false, true);
  total: Integer;
begin
  total := SumArray(numbers);

  WriteLn('The sum of the array elements is: ', total);
end.

-------------------------------------------------------

program ArrayOfArraysExample;

var
  Matrix: array[1..3, 1..3] of Integer;  { Corrected array definition }
  i, j: Integer;

begin
  { Initialize the matrix with values }
  for i := 1 to 3 do
    for j := 1 to 3 do
      Matrix[i, j] := i * j;  { Corrected array indexing }

  { Print the matrix }
  for i := 1 to 3 do
  begin
    for j := 1 to 3 do
      Write(Matrix[i, j]);  { Use Write instead of Writeln to print values on the same line }
    Writeln();  { Move to the next line after printing a row }
  end;
end.

-------------------------------------------------------

program EjemploVariablesYConstantes;

{ Este programa muestra cómo definir variables de diferentes tipos en Pascal
  y cómo utilizar constantes de caracteres y cadenas de texto. }

{ Constantes de tipo char y string }
const
  SALUDO = 'Hola, Mundo!';  { Constante de tipo string }
  INICIAL = 'A';            { Constante de tipo char }

var
  { Variables de tipo básico }
  numero: integer;          { Variable de tipo integer }
  letra: char;              { Variable de tipo char }
  nombre: string;           { Variable de tipo string }
  esValido: boolean;        { Variable de tipo boolean }

  { Arreglos de una dimensión }
  numeros: array[1..5] of integer;  { Arreglo de enteros de una dimensión }
  letras: array[1..3] of char;      { Arreglo de caracteres de una dimensión }
  estados: array[1..4] of boolean;  { Arreglo de booleanos de una dimensión }

  { Arreglos de dos dimensiones }
  matrizNumeros: array[1..3, 1..3] of integer;  { Arreglo de enteros de dos dimensiones }
  matrizLetras: array[1..2, 1..2] of char;      { Arreglo de caracteres de dos dimensiones }
  matrizEstados: array[1..2, 1..2] of boolean;  { Arreglo de booleanos de dos dimensiones }

begin
  { Asignación de valores a variables }
  numero := 10;
  letra := 'B';
  nombre := 'Juan';
  esValido := true;

  { Asignación de valores a arreglos de una dimensión }
  numeros[1] := 1;
  numeros[2] := 2;
  numeros[3] := 3;
  numeros[4] := 4;
  numeros[5] := 5;

  letras[1] := 'X';
  letras[2] := 'Y';
  letras[3] := 'Z';

  estados[1] := true;
  estados[2] := false;
  estados[3] := true;
  estados[4] := false;

  { Asignación de valores a arreglos de dos dimensiones }
  matrizNumeros[1, 1] := 1;
  matrizNumeros[1, 2] := 2;
  matrizNumeros[1, 3] := 3;
  matrizNumeros[2, 1] := 4;
  matrizNumeros[2, 2] := 5;
  matrizNumeros[2, 3] := 6;
  matrizNumeros[3, 1] := 7;
  matrizNumeros[3, 2] := 8;
  matrizNumeros[3, 3] := 9;

  matrizLetras[1, 1] := 'A';
  matrizLetras[1, 2] := 'B';
  matrizLetras[2, 1] := 'C';
  matrizLetras[2, 2] := 'D';

  matrizEstados[1, 1] := true;
  matrizEstados[1, 2] := false;
  matrizEstados[2, 1] := false;
  matrizEstados[2, 2] := true;

  { Ejemplo de uso de las constantes }
  writeln(SALUDO);         { Imprime 'Hola, Mundo!' }
  writeln('La inicial es: ', INICIAL);  { Imprime 'La inicial es: A' }
end.

-------------------------------------------------------

program InlineReadWrite;

{ Este programa realiza la lectura y escritura de variables inline
  utilizando directamente variables de tipo integer, char y string. }

var
  numero: integer;
  letra: char;
  nombre: string;

begin
  { Lectura de valores }
  writeln('Ingrese un número: ');
  readln(numero);

  writeln('Ingrese una letra: ');
  readln(letra);

  writeln('Ingrese su nombre: ');
  readln(nombre);

  { Escritura de valores }
  writeln('El número ingresado es: ', numero);
  writeln('La letra ingresada es: ', letra);
  writeln('El nombre ingresado es: ', nombre);
end.

-------------------------------------------------------

